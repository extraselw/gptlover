document.addEventListener("DOMContentLoaded", function () {

  /* ======================================================== */
  /* === –õ–æ–≥–∏–∫–∞ –ú–æ–±–∏–ª—å–Ω–æ–≥–æ –ú–µ–Ω—é (–ë–µ–∑ –ó–∞—Ç–µ–º–Ω–µ–Ω–∏—è) === */
  /* ======================================================== */
  
  const navMenu = document.getElementById("nav-menu");
  const navToggle = document.getElementById("nav-toggle");
  const navClose = document.getElementById("nav-close");
  const navLinks = document.querySelectorAll(".nav-link");

  // –§—É–Ω–∫—Ü–∏—è –û–¢–ö–†–´–¢–ò–Ø –º–µ–Ω—é
  function openMenu() {
    // 1. –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–∞–Ω–µ–ª—å –º–µ–Ω—é
    navMenu.classList.add("show-menu");
    // 2. –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    document.body.classList.add('no-scroll');
    
    /* –ë–õ–û–ö –° scrim –£–î–ê–õ–ï–ù 
    */
  }

  // –§—É–Ω–∫—Ü–∏—è –ó–ê–ö–†–´–¢–ò–Ø –º–µ–Ω—é
  function closeMenu() {
    // 1. –ü—Ä—è—á–µ–º –ø–∞–Ω–µ–ª—å –º–µ–Ω—é
    navMenu.classList.remove("show-menu");
    // 2. –°–Ω–∏–º–∞–µ–º –±–ª–æ–∫ —Å–∫—Ä–æ–ª–ª–∞
    document.body.classList.remove('no-scroll');
    
    /* –ë–õ–û–ö –° scrim –£–î–ê–õ–ï–ù 
    */
  }

  // –ù–∞–∑–Ω–∞—á–∞–µ–º —Å–æ–±—ã—Ç–∏—è
  if (navToggle) {
    navToggle.addEventListener("click", openMenu);
  }

  if (navClose) {
    navClose.addEventListener("click", closeMenu);
  }

  // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–µ–Ω—é –ø–æ –∫–ª–∏–∫—É –Ω–∞ –ª—é–±—É—é —Å—Å—ã–ª–∫—É
  navLinks.forEach(link => {
    link.addEventListener("click", closeMenu);
  });
  /* --- –ö–û–ù–ï–¶ –õ–û–ì–ò–ö–ò –ú–ï–ù–Æ --- */


  /* --- –ê–Ω–∏–º–∞—Ü–∏—è —à–∞–ø–∫–∏ –ø—Ä–∏ —Å–∫—Ä–æ–ª–ª–µ --- */
  const header = document.getElementById("header");
  if (header) {
    window.addEventListener("scroll", () => {
      // –ï—Å–ª–∏ –ø—Ä–æ–∫—Ä—É—Ç–∏–ª–∏ –±–æ–ª—å—à–µ —á–µ–º –Ω–∞ 50px, –¥–æ–±–∞–≤–ª—è–µ–º –∫–ª–∞—Å—Å
      if (window.scrollY > 50) {
        header.classList.add("header-scrolled");
      } else {
        header.classList.remove("header-scrolled");
      }
    });
  }


  /* --- –õ–æ–≥–∏–∫–∞ C—á–µ—Ç—á–∏–∫–∞ (–¢–∞–π–º–µ—Ä) --- */
  const durationElement = document.getElementById("loveDuration");
  const todayDateEl = document.getElementById("todayDate");

  const startDate = new Date(window.LOVE_START || "2024-10-17T21:51:00+05:00");
  const hearts = ["üíñ","üíò","üíù","üíû","‚ù§Ô∏è‚Äçüî•"];

  function getWordForm(number, one, few, many) {
    number = Math.abs(Number(number)) || 0;
    if (number % 10 === 1 && number % 100 !== 11) return one;
    if (number % 10 >= 2 && number % 10 <= 4 && (number % 100 < 10 || number % 100 >= 20)) return few;
    return many;
  }

  function formatDateNice(d) {
    const months = ["—è–Ω–≤–∞—Ä—è","—Ñ–µ–≤—Ä–∞–ª—è","–º–∞—Ä—Ç–∞","–∞–ø—Ä–µ–ª—è","–º–∞—è","–∏—é–Ω—è","–∏—é–ª—è","–∞–≤–≥—É—Å—Ç–∞","—Å–µ–Ω—Ç—è–±—Ä—è","–æ–∫—Ç—è–±—Ä—è","–Ω–æ—è–±—Ä—è","–¥–µ–∫–∞–±—Ä—è"];
    return `${d.getDate()} ${months[d.getMonth()]} ${d.getFullYear()}`;
  }

  function calculateDuration() {
    // –ï—Å–ª–∏ –º—ã –Ω–µ –Ω–∞ –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ, —ç—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ –¥–æ–ª–∂–Ω–∞ –Ω–∏—á–µ–≥–æ –¥–µ–ª–∞—Ç—å
    if (!durationElement || !todayDateEl) return;

    const now = new Date();
    const diff = now - startDate;
    if (diff < 0) {
      durationElement.textContent = "–ï—â—ë –Ω–µ –Ω–∞—á–∞–ª–æ—Å—å üí´";
      todayDateEl.textContent = `–°–µ–≥–æ–¥–Ω—è: ${formatDateNice(now)}`;
      return;
    }

    const totalMinutes = Math.floor(diff / (1000 * 60));
    const totalDays = Math.floor(totalMinutes / (60 * 24));
    const years = Math.floor(totalDays / 365);
    const days = totalDays % 365;
    const hours = Math.floor((totalMinutes % (60 * 24)) / 60);
    const minutes = totalMinutes % 60;

    durationElement.innerHTML = `${years} ${getWordForm(years, "–≥–æ–¥", "–≥–æ–¥–∞", "–ª–µ—Ç")}, ${days} ${getWordForm(days, "–¥–µ–Ω—å", "–¥–Ω—è", "–¥–Ω–µ–π")}, ${hours} ${getWordForm(hours, "—á–∞—Å", "—á–∞—Å–∞", "—á–∞—Å–æ–≤")} –∏ ${minutes} ${getWordForm(minutes, "–º–∏–Ω—É—Ç–∞", "–º–∏–Ω—É—Ç—ã", "–º–∏–Ω—É—Ç")} <span class="heart-icon">‚ù§Ô∏è‚Äçüî•</span>`;

    todayDateEl.textContent = `–°–µ–≥–æ–¥–Ω—è: ${formatDateNice(now)}`;
  }

  // –°–∏–Ω—Ö—Ä–æ–Ω–∏–∑–∏—Ä—É–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å –Ω–∞—á–∞–ª–æ–º —Å–ª–µ–¥—É—é—â–µ–π –º–∏–Ω—É—Ç—ã
  // –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—á–µ—Ç—á–∏–∫–∞ —Å—É—â–µ—Å—Ç–≤—É—é—Ç
  if (durationElement && todayDateEl) {
    calculateDuration();
    const now = new Date();
    const msToNextMinute = (60 - now.getSeconds()) * 1000 - now.getMilliseconds();
    setTimeout(() => {
      calculateDuration();
      setInterval(calculateDuration, 60 * 1000);
    }, msToNextMinute);
  }


  /* --- –ü–∞–¥–∞—é—â–∏–µ —Å–µ—Ä–¥–µ—á–∫–∏ --- */
  function createHeart() {
    const el = document.createElement("div");
    el.className = "heart";
    el.textContent = hearts[Math.floor(Math.random() * hearts.length)];

    const size = Math.random() * 18 + 12; // px
    el.style.fontSize = size + "px";

    const windowW = Math.max(document.documentElement.clientWidth || 0, window.innerWidth || 0);
    const maxLeft = Math.max(8, windowW - (size * 1.4)); 
    const left = Math.random() * maxLeft;
    el.style.left = `${left}px`;

    const dur = (Math.random() * 3 + 3).toFixed(2) + "s";
    el.style.setProperty("--dur", dur);

    document.body.appendChild(el);
    // —É–¥–∞–ª—è–µ–º –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è
    setTimeout(() => el.remove(), parseFloat(dur) * 1000 + 300);
  }

  // –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–¥–µ—á–∫–∏ –Ω–∞ –≤—Å–µ—Ö —Å—Ç—Ä–∞–Ω–∏—Ü–∞—Ö
  setInterval(createHeart, 900);
});